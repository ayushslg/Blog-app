{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\react-blog\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { PostAdd } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      }); //window.location.reload();\n\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: [\" \", new Date(post.createdAt).toDateString(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        autoFocus: true,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"Ol2eRW390+fGmulGjTYHDHUPYgQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/react-blog/client/src/components/singlePost/SinglePost.jsx"],"names":["PostAdd","axios","useContext","useState","useEffect","Link","useLocation","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import { PostAdd } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Context } from \"../../context/Context\";\r\nimport \"./singlePost.css\";\r\n\r\nexport default function SinglePost() {\r\n    const location = useLocation()\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [post,setPost] = useState({})\r\n    const PF = \"http://localhost:5000/images/\"\r\n    const { user } = useContext(Context);\r\n    const [title,setTitle] = useState(\"\");\r\n    const [desc,setDesc] = useState(\"\");\r\n    const [updateMode,setUpdateMode] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const getPost = async ()=>{\r\n            const res= await axios.get(\"/posts/\"+path);\r\n            setPost(res.data);\r\n            setTitle(res.data.title);\r\n            setDesc(res.data.desc);\r\n        }; \r\n        getPost()\r\n    }, [path]);\r\n\r\n    const handleDelete = async()=>{\r\n        try{\r\n        await axios.delete(`/posts/${post._id}`, {\r\n            data: {username:user.username}});\r\n        window.location.replace(\"/\");\r\n        }catch(err){\r\n\r\n        }\r\n    };\r\n    const handleUpdate = async()=>{\r\n        try{\r\n            await axios.put(`/posts/${post._id}`, {\r\n              username:user.username,title,desc});\r\n            //window.location.reload();\r\n            setUpdateMode(false);\r\n            }catch(err){\r\n    \r\n            }\r\n    };\r\n    return (\r\n        <div className=\"singlePost\">\r\n            <div className=\"singlePostWrapper\">\r\n                {post.photo && \r\n                (<img\r\n                    src={PF + post.photo} \r\n                    alt=\"\" \r\n                    className=\"singlePostImg\"\r\n                />)\r\n                }{\r\n                    updateMode ? <input type=\"text\" value={title}\r\n                     className=\"singlePostTitleInput\"\r\n                         autoFocus\r\n                         onChange = {(e)=>setTitle(e.target.value)}\r\n                     /> : (\r\n                        <h1 className=\"singlePostTitle\">\r\n                        {title}\r\n                        {post.username === user?.username &&\r\n                            (<div className=\"singlePostEdit\">\r\n                            <i className=\"singlePostIcon far fa-edit\" \r\n                             onClick ={()=>setUpdateMode(true)}\r\n                            ></i>\r\n                            <i className=\"singlePostIcon far fa-trash-alt\"\r\n                            onClick={handleDelete}></i>\r\n                    </div>)\r\n                    }\r\n                    \r\n                </h1>\r\n                    )\r\n                }\r\n\r\n                \r\n                \r\n                <div className=\"singlePostInfo\">\r\n                    <span className=\"singlePostAuthor\">Author:\r\n                        <Link to ={`/?user=${post.username}`} className=\"link\">\r\n                            <b>{post.username}</b>\r\n                        </Link>\r\n                    </span>\r\n                    <span className=\"singlePostDate\"> {new Date(post.createdAt).toDateString()} </span>\r\n                </div>\r\n                {updateMode ? <textarea className=\"singlePostDescInput\"\r\n                    value={desc}\r\n                    autoFocus\r\n                    onChange = {(e)=>setDesc(e.target.value)}\r\n                /> : (\r\n                    <p className=\"singlePostDesc\">\r\n                    {desc} \r\n                    </p>\r\n                )}\r\n                {updateMode && (\r\n                    <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>\r\n                )}\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}